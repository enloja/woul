{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","Prototypes","PropTypes","object","isRequired","func","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","initialSate","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectBoard_ProjectTask_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_nextProps$project_ta","_this$props$match$par","getProjectTask","updateProjectTask","patch","Landing","protoType","Register","username","password","confirmPassword","newUser","createNewUser","autoComplete","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decode_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","securityUtils_SecureRoute","exac","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9c48db8.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n     await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? this will delete de project and all the data!!\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n\n//Types for backlog actions\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\"\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  }\n  render() {\n      const {project} = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\">\n                      {\" \"}\n                      Project Board{\" \"}\n                    </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                  <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\n                    <i className=\"fa fa-minus-circle pr-1\">\n                      {\" \"}\n                      Delete Project\n                    </i>\n                  </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\nexport default connect(null, {deleteProject}) (ProjectItem)","\nimport React from 'react'\nimport {Link} from \"react-router-dom\"\n\n const CreateProjectButton =()=> {\n     return (\n       <React.Fragment>\n         <Link\n           to=\"/addProject\"\n           className=\"btn btn-lg btn-info\"\n         >\n           Create a Project\n         </Link>\n         </React.Fragment>\n     );\n    \n };\n export default CreateProjectButton;\n","import React, { Component } from 'react'\nimport ProjectItem from './Project/ProjectItem';\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport {connect} from \"react-redux\";\nimport {getProjects} from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\"\n\n\nclass Dashboard extends Component { \n\ncomponentDidMount(){\n    this.props.getProjects();\n}\n\n    render() {\n        const {projects} = this.props.project; \n    \n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br />                            \n                            <CreateProjectButton/>\n                            <br />\n                            <hr />  \n                            {projects.map(project => (\n\n                                <ProjectItem key={project.id} project={project}/>    \n                                \n                                ))                           \n                            }                 \n        \n                </div>\n                    </div>\n                </div>\n               \n            </div>\n            \n\n        );\n  }\n}\nDashboard.Prototypes = {\n    project: PropTypes.object.isRequired,\n    getProjects:PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project:state.project\n});\nexport default connect(mapStateToProps, {getProjects})(Dashboard);","import axios from \"axios\";\n\nconst setJWToken = token => {\n    if(token){\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n       delete axios.defaults.headers.common[\"Authorization\"] ;\n    }\n};\n\nexport default setJWToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWToken from \"../securityUtils/setJWToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    //post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract the token from the res.data\n    const { token } = res.data;\n    //store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    //set our token in header ***\n    setJWToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    //dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const logout= () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/dashboard\" className=\"nav-link\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/register\" className=\"nav-link\">\n              Sign up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          {headerLinks}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n            \n          >\n           \n            <span className=\"navbar-toggler-icon\" />\n          </button>\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {createProject} from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\n class AddProject extends Component {\n   constructor (){\n     super()\n     this.state = {\n       projectName: \"\",\n       projectIdentifier: \"\",\n       description: \"\",\n       start_date: \"\",\n       end_date: \"\",\n       errors: {}\n     };\n     this.onChange = this.onChange.bind(this);\n     this.onSubmit = this.onSubmit.bind(this);\n   }\n\n   // life cyle hooks\n\n   componentWillReceiveProps(nextProps){\n     if(nextProps.errors){\n       this.setState({ errors: nextProps.errors});\n     }\n\n   }\n\n   onChange(e){\n      //this.setState({ projectName: e.target.value})\n      this.setState({[e.target.name]: e.target.value})\n   }\n\n  onSubmit(e){\n    e.preventDefault();\n      \n    const newProject = {\n        \"projectName\": this.state.projectName,\n        \"projectIdentifier\": this.state.projectIdentifier,\n        \"description\": this.state.description,\n        \"start_date\": this.state.start_date,\n        \"end_date\": this.state.end_date,\n       };\n\n        this.props.createProject(newProject, this.props.history)\n  }\n  render() {\n    const {errors} = this.state;\n  \n    return (\n      <div>\n        {\n          //to create form\n          //check name attribute input fields\n          // create constructor\n          // set state\n          //set value on input fields\n          //create onchange function\n          // set onChange on each input field\n          // bind on constructor\n          //check state change in te react extension\n        }\n\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">\n                  Create Project form\n                </h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\n                        \"form-control form-control-lg\",\n                        {\n                          \"is-invalid\": errors.projectName\n                        }\n                      )}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\n                        \"form-control form-control-lg\",\n                        {\n                          \"is-invalid\": errors.projectIdentifier\n                        }\n                      )}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\n                        \"form-control form-control-lg\",\n                        {\n                          \"is-invalid\": errors.description\n                        }\n                      )}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddProject.propTypes = {\n  createProject:PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);","import { GET_ERRORS } from \"../actions/types\";\n\n\nconst initialState = {};\n\nexport default function(state = initialState, action){\n    switch(action.type) {\n        case GET_ERRORS :\n        return action.payload;\n        \n        default :\n        return state;\n    }\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialSate = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialSate, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers ({\n    errors:errorReducer,\n    project: projectReducer,\n    backlog : backlogReducer,\n    security : securityReducer\n\n});","import { createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION__()\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools ) {\n    store = createStore(\n      rootReducer,\n      initialState,\n      compose(\n        applyMiddleware(...middleware),\n        ReactReduxDevTools\n      )\n    );\n}\nelse{\n    store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(...middleware))\n    );\n}\n\n\nexport default store;","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(updateProject, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst maptStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\nexport default connect(\n  maptStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\n\nclass ProjectTask extends Component {\n  onDeleteClick = (backlog_id, pt_id) => {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  };\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n         if (\n           window.confirm(\n             `Are you sure? this will delete de project Task ${pt_id}, this action cannot be undone`\n           )\n         ) {\n           await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n           dispatch({\n             type: DELETE_PROJECT_TASK,\n             payload: pt_id\n           });\n         }\n       };\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTask/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructors to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapToStateProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\nexport default connect(\n  mapToStateProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  //onChange\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  //onSubmit\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.acceptanceCriteria\n                    })}\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                  {errors.acceptanceCriteria && (\n                    <div className=\"invalid-feedback\">\n                      {errors.acceptanceCriteria}\n                    </div>\n                  )}\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.dueDate\n                    })}\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                  {errors.dueDate && (\n                    <div className=\"invalid-feedback\">{errors.dueDate}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.priority\n                    })}\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                  {errors.priority && (\n                    <div className=\"invalid-feedback\">{errors.priority}</div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.status\n                    })}\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                  {errors.status && (\n                    <div className=\"invalid-feedback\">{errors.status}</div>\n                  )}\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      projectIdentifier,\n      dueDate,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      projectIdentifier,\n      dueDate,\n      create_At\n    });\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n  //onChange\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  //onSubmit\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      id: this.state.id,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      projectIdentifier: this.state.projectIdentifier,\n      dueDate: this.state.dueDate\n    };\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,this.state.projectSequence,\n      newTask,\n      this.props.history\n    );\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name :{this.state.projectIdentifier} + Project Code:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nUpdateProjectTask.propTypes = {\n  updateProjectTask: PropTypes.func.isRequired,\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  project_task: state.backlog.project_task\n});\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLanding.protoType = {\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProp = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProp)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\"> {errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address(Username)\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\"> {errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    autoComplete=\"new-password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\"> {errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    autoComplete=\"new-password\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {\" \"}\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.props.login(LoginRequest);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    autoComplete=\"current-password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.protoType = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProp = state => ({\n  security: state.security,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProp,\n  { login }\n)(Login);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nSecureRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProp = state => ({\n  security: state.security\n});\nexport default connect(mapStateToProp)(SecureRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWToken from \"./securityUtils/setJWToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\nif (jwtToken) {\n  setJWToken(jwtToken);\n  const decode_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decode_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decode_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecureRoute exac path=\"/dashboard\" component={Dashboard} />\n              <SecureRoute exac path=\"/addProject\" component={AddProject} />\n              <SecureRoute\n                exac\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecureRoute\n                exac\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecureRoute\n                exac\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecureRoute\n                exac\n                path=\"/updateTask/:backlog_id/:pt_id/\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}